{
  "openapi": "3.0.1",
  "info": {
    "title": "Power-Pulse",
    "description": "",
    "version": "1.0"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://power-pulse-rh13.onrender.com/api"
    },
    {
      "url": "http://localhost:3001/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoint"
    },
    {
      "name": "Products",
      "description": "Products endpoints"
    },
    {
      "name": "Exercises",
      "description": "Exercises endpoints"
    },
    {
      "name": "Diary",
      "description": "Diary endpoints"
    },
    {
      "name": "Statistics",
      "description": "User statistics"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "user registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usersSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usersSchemaRes"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "user login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginSchemaRes"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "user logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Auth"],
        "summary": "user current",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK, login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OK, login success"
                    },
                    "ResponseBody": {
                      "type": "object",
                      "properties": {
                        "bodyParams": {
                          "type": "object",
                          "properties": {
                            "height": {
                              "type": "integer",
                              "example": "180"
                            },
                            "currentWeight": {
                              "type": "integer",
                              "example": "80"
                            },
                            "desiredWeight": {
                              "type": "integer",
                              "example": "75"
                            },
                            "birthday": {
                              "type": "date",
                              "example": "2000-09-07"
                            },
                            "blood": {
                              "type": "integer",
                              "example": "2"
                            },
                            "sex": {
                              "type": "string",
                              "example": "male"
                            },
                            "levelActivity": {
                              "type": "integer",
                              "example": "2"
                            },
                            "dailyNormOfSport": {
                              "type": "number",
                              "description": "User's daily calorie intake",
                              "example": "110"
                            },
                            "dailyIntakeCalories": {
                              "type": "number",
                              "description": "User's daily calorie intake",
                              "example": "6036"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "example": "653a8200a6580962b85f536a"
                        },
                        "name": {
                          "type": "string",
                          "example": "Serg Oz"
                        },
                        "email": {
                          "type": "string",
                          "example": "ozeran16@gmail.com"
                        },
                        "avatarUrl": {
                          "type": "string",
                          "example": "http://res.cloudinary.com/dtq5o3uun/image/upload/v1698264655/gemxxystvo5fnonpvpat.jpg"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTNhODIwMGE2NTgwOTYyYjg1ZjUzNmEiLCJpYXQiOjE2OTgzMzMxODQsImV4cCI6MTY5ODQxOTU4NH0.5APsr59IQDHTRsU75HDgttmYm9991_irwM9HO7Y_7FQ"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/dailyMetrics": {
      "patch": {
        "tags": ["Auth"],
        "summary": "user update data",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/usersUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/usersUpdateSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/users/changeData": {
      "patch": {
        "tags": ["Auth"],
        "summary": "user update data",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "New user`s name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Data to update user's information",
          "required": true,
          "content": {
            "multipart/form-data": {
                     "schema": {
                        "type": "object",
                        "properties": {
                           "avatar": {
                              "type": "string",
                              "format": "binary"
                           }
                           
                        }
                     }
                  },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                              "type": "string"
                          }
                  
                }
              }
            }
            
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact updated"
                    },
                    "status": {
                      "type": "string",
                      "example": "Update"
                    },
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "avatarUrl": {
                      "type": "string",
                      "example": "http://res.cloudinary.com/dtq5o3uun/image/upload/v1698264655/gemxxystvo5fnonpvpat.jpg"
                    },
                    "name": {
                      "type": "string",
                      "example": "Name Surname"
                    }
                  }
                }
              }
            }
          },
          "500":{
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get all or filtred products",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "required": false,
            "type": "string",
            "description": "Search products by word"
          },
          {
            "in": "query",
            "name": "category",
            "required": false,
            "type": "string",
            "description": "Search products by categories"
          },
          {
            "in": "query",
            "name": "recommended",
            "required": false,
            "type": "string",
            "description": "Search recommended products by blood type"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/productsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/exercises": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get all exercises",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    },
    "/exercises/bodyParts": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get all filters by body parts",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/exercises/equipment": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get all filters by equipment",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/exercises/muscles": {
      "get": {
        "tags": ["Exercises"],
        "summary": "Get all filters by muscles",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/diary": {
      "get": {
        "tags": ["Diary"],
        "summary": "Get diary by user and date",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "type": "string",
            "example": "27/10/2023",
            "description": "Date for which to get diary"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          },
          "400" :{
            "description": "Bad request"
          }
        }
      }
    },
    "/diary/addproduct": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add eaten product to diary",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Eaten product object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addProductSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "descroption": "Not found"
          }
        }
      }
    },
    "/diary/deleteproduct": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete product from diary",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Product to delete",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteProductSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "descroption": "Not found"
          }
        }
      }
    },
    "/diary/addexercise": {
      "post": {
        "tags": ["Diary"],
        "summary": "Add exercise to diary",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Exercise object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/addExerciseSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "descroption": "Not found"
          }
        }
      }
    },
    "/diary/deleteexercise": {
      "delete": {
        "tags": ["Diary"],
        "summary": "Delete exercise from diary",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Exercise to delete",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteExerciseSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "descroption": "Not found"
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get API database statistics",

        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],

        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "usersSchema": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          }
        }
      },
      "usersSchemaRes": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "message",
            "example": "User created"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@mail.com"
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTNhODIwMGE2NTgwOTYyYjg1ZjUzNmEiLCJpYXQiOjE2OTgzMzMxODQsImV4cCI6MTY5ODQxOTU4NH0.5APsr59IQDHTRsU75HDgttmYm9991_irwM9HO7Y_7FQ"
          }
        }
      },
      "loginSchema": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234567"
          }
        }
      },
      "loginSchemaRes": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTNhODIwMGE2NTgwOTYyYjg1ZjUzNmEiLCJpYXQiOjE2OTgzMzMxODQsImV4cCI6MTY5ODQxOTU4NH0.5APsr59IQDHTRsU75HDgttmYm9991_irwM9HO7Y_7FQ"
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "user@mail.com"
              }
            }
          }
        }
      },
      "usersUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User"
          },
          "height": {
            "type": "integer",
            "description": "User's height",
            "example": "180"
          },
          "currentWeight": {
            "type": "integer",
            "description": "User's currentWeight",
            "example": "80"
          },
          "desiredWeight": {
            "type": "integer",
            "description": "User's desiredWeight",
            "example": "75"
          },
          "birthday": {
            "type": "date",
            "description": "User's birthday",
            "example": "2000-12-01"
          },
          "blood": {
            "type": "integer",
            "description": "User's blood",
            "example": "2"
          },
          "sex": {
            "type": "string",
            "description": "User's sex",
            "example": "male"
          },
          "levelActivity": {
            "type": "integer",
            "description": "User's levelActivity",
            "example": "2"
          }
        }
      },
      "usersChangeData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Update user's name",
            "example": "Name Surname"
          }
        }
      },
      "productsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Products id",
              "example": "64f2458d6f67bc34bae4f7f8"
            },
            "weight": {
              "type": "integer",
              "description": "Product weight, grams",
              "example": "100"
            },
            "calories": {
              "type": "integer",
              "description": "Calorie content of 100 grams of product",
              "example": "240"
            },
            "category": {
              "type": "string",
              "description": "Product category",
              "example": "fish"
            },
            "title": {
              "type": "string",
              "description": "Product name",
              "example": "Danbo cheese"
            },
            "groupBloodNotAllowed": {
              "type": "object",
              "description": "Recommend products by blood type",
              "example": "{'1': true, '2': true, '3':false, '4': true}"
            }
          }
        }
      },
      "allExercisesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Exercises id",
              "example": "64f2458d6f67bc34bae4f7f8"
            },
            "bodyPart": {
              "type": "string",
              "description": "The part of the body for which the exercise is intended",
              "example": "chest"
            },
            "equipment": {
              "type": "string",
              "description": "Equipment is necessary to perform the exercise",
              "example": "leverage machine"
            },
            "gifUrl": {
              "type": "string",
              "description": "Illustration of how to perform the exercise",
              "example": "https://ftp.goit.study/img/power-pulse/gifs/0009.gif"
            },
            "name": {
              "type": "string",
              "description": "Exercise name",
              "example": "assisted chest dip (kneeling)"
            },
            "target": {
              "type": "string",
              "description": "The muscle for which the exercise is intended",
              "example": "pectorals"
            },
            "burnedCalories": {
              "type": "integer",
              "description": "Amount of calories that were burnt",
              "example": 329
            },
            "time": {
              "type": "number",
              "description": "The minimum amount of time to perform the exercise",
              "example": 3
            }
          }
        }
      },
      "addProductSchema": {
        "type": "object",
        "required": ["productId", "calories", "amount"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Eaten product id",
            "example": "5d51694902b2373622ff5b8d"
          },
          "calories": {
            "type": "number",
            "description": "Consumed calories",
            "example": 562
          },
          "amount": {
            "type": "number",
            "description": "Amount of eaten product",
            "example": 200
          }
        }
      },
      "deleteProductSchema": {
        "type": "object",
        "required": ["productId", "date"],
        "properties": {
          "productId": {
            "type": "string",
            "description": "Eaten product id",
            "example": "653b9a6ef45eeee7ea255d37"
          },
          "date": {
            "type": "string",
            "description": "Date when user ate the product",
            "example": "27/10/2023"
          }
        }
      },
      "addExerciseSchema": {
        "type": "object",
        "required": ["exerciseId", "time", "burnedCalories"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "Done exercise id",
            "example": "64f2458d6f67bc34bae4f819"
          },
          "time": {
            "type": "number",
            "description": "Time the exercise was done for",
            "example": 6
          },
          "burnedCalories": {
            "type": "number",
            "description": "Amount of calories burnt by doing exercise",
            "example": 670
          }
        }
      },
      "deleteExerciseSchema": {
        "type": "object",
        "required": ["exerciseId", "date"],
        "properties": {
          "exerciseId": {
            "type": "string",
            "description": "Done exercise id",
            "example": "653bbee33804df4424a76b5a"
          },
          "date": {
            "type": "string",
            "description": "Date when user did the exercise",
            "example": "27/10/2023"
          }
        }
      }
    }
  }
}
